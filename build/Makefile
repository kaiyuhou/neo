# CMAKE generated file: DO NOT EDIT!
# Generated by "Unix Makefiles" Generator, CMake Version 3.19

# Default target executed when no arguments are given to make.
default_target: all

.PHONY : default_target

# Allow only one "make -f Makefile2" at a time, but pass parallelism.
.NOTPARALLEL:


#=============================================================================
# Special targets provided by cmake.

# Disable implicit rules so canonical targets will work.
.SUFFIXES:


# Disable VCS-based implicit rules.
% : %,v


# Disable VCS-based implicit rules.
% : RCS/%


# Disable VCS-based implicit rules.
% : RCS/%,v


# Disable VCS-based implicit rules.
% : SCCS/s.%


# Disable VCS-based implicit rules.
% : s.%


.SUFFIXES: .hpux_make_needs_suffix_list


# Command-line flag to silence nested $(MAKE).
$(VERBOSE)MAKESILENT = -s

#Suppress display of executed commands.
$(VERBOSE).SILENT:

# A target that is always out of date.
cmake_force:

.PHONY : cmake_force

#=============================================================================
# Set environment variables for the build.

# The shell in which to execute make rules.
SHELL = /bin/sh

# The CMake executable.
CMAKE_COMMAND = /usr/local/bin/cmake

# The command to remove a file.
RM = /usr/local/bin/cmake -E rm -f

# Escaping for special characters.
EQUALS = =

# The top-level source directory on which CMake was run.
CMAKE_SOURCE_DIR = /root/neo-kaiyu

# The top-level build directory on which CMake was run.
CMAKE_BINARY_DIR = /root/neo-kaiyu/build

#=============================================================================
# Targets provided globally by CMake.

# Special rule for the target install/local
install/local: preinstall
	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --cyan "Installing only the local directory..."
	/usr/local/bin/cmake -DCMAKE_INSTALL_LOCAL_ONLY=1 -P cmake_install.cmake
.PHONY : install/local

# Special rule for the target install/local
install/local/fast: preinstall/fast
	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --cyan "Installing only the local directory..."
	/usr/local/bin/cmake -DCMAKE_INSTALL_LOCAL_ONLY=1 -P cmake_install.cmake
.PHONY : install/local/fast

# Special rule for the target edit_cache
edit_cache:
	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --cyan "Running CMake cache editor..."
	/usr/local/bin/ccmake -S$(CMAKE_SOURCE_DIR) -B$(CMAKE_BINARY_DIR)
.PHONY : edit_cache

# Special rule for the target edit_cache
edit_cache/fast: edit_cache

.PHONY : edit_cache/fast

# Special rule for the target rebuild_cache
rebuild_cache:
	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --cyan "Running CMake to regenerate build system..."
	/usr/local/bin/cmake --regenerate-during-build -S$(CMAKE_SOURCE_DIR) -B$(CMAKE_BINARY_DIR)
.PHONY : rebuild_cache

# Special rule for the target rebuild_cache
rebuild_cache/fast: rebuild_cache

.PHONY : rebuild_cache/fast

# Special rule for the target install/strip
install/strip: preinstall
	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --cyan "Installing the project stripped..."
	/usr/local/bin/cmake -DCMAKE_INSTALL_DO_STRIP=1 -P cmake_install.cmake
.PHONY : install/strip

# Special rule for the target install/strip
install/strip/fast: preinstall/fast
	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --cyan "Installing the project stripped..."
	/usr/local/bin/cmake -DCMAKE_INSTALL_DO_STRIP=1 -P cmake_install.cmake
.PHONY : install/strip/fast

# Special rule for the target list_install_components
list_install_components:
	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --cyan "Available install components are: \"Unspecified\""
.PHONY : list_install_components

# Special rule for the target list_install_components
list_install_components/fast: list_install_components

.PHONY : list_install_components/fast

# Special rule for the target install
install: preinstall
	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --cyan "Install the project..."
	/usr/local/bin/cmake -P cmake_install.cmake
.PHONY : install

# Special rule for the target install
install/fast: preinstall/fast
	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --cyan "Install the project..."
	/usr/local/bin/cmake -P cmake_install.cmake
.PHONY : install/fast

# The main all target
all: cmake_check_build_system
	$(CMAKE_COMMAND) -E cmake_progress_start /root/neo-kaiyu/build/CMakeFiles /root/neo-kaiyu/build//CMakeFiles/progress.marks
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 all
	$(CMAKE_COMMAND) -E cmake_progress_start /root/neo-kaiyu/build/CMakeFiles 0
.PHONY : all

# The main clean target
clean:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 clean
.PHONY : clean

# The main clean target
clean/fast: clean

.PHONY : clean/fast

# Prepare targets for installation.
preinstall: all
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 preinstall
.PHONY : preinstall

# Prepare targets for installation.
preinstall/fast:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 preinstall
.PHONY : preinstall/fast

# clear depends
depend:
	$(CMAKE_COMMAND) -P /root/neo-kaiyu/build/CMakeFiles/VerifyGlobs.cmake
	$(CMAKE_COMMAND) -S$(CMAKE_SOURCE_DIR) -B$(CMAKE_BINARY_DIR) --check-build-system CMakeFiles/Makefile.cmake 1
.PHONY : depend

#=============================================================================
# Target rules for targets named neo

# Build rule for target.
neo: cmake_check_build_system
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 neo
.PHONY : neo

# fast build rule for target.
neo/fast:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/neo.dir/build.make CMakeFiles/neo.dir/build
.PHONY : neo/fast

#=============================================================================
# Target rules for targets named spin_model

# Build rule for target.
spin_model: cmake_check_build_system
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 spin_model
.PHONY : spin_model

# fast build rule for target.
spin_model/fast:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/spin_model.dir/build.make CMakeFiles/spin_model.dir/build
.PHONY : spin_model/fast

#=============================================================================
# Target rules for targets named setcap

# Build rule for target.
setcap: cmake_check_build_system
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 setcap
.PHONY : setcap

# fast build rule for target.
setcap/fast:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/setcap.dir/build.make CMakeFiles/setcap.dir/build
.PHONY : setcap/fast

#=============================================================================
# Target rules for targets named libneo

# Build rule for target.
libneo: cmake_check_build_system
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 libneo
.PHONY : libneo

# fast build rule for target.
libneo/fast:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/libneo.dir/build.make CMakeFiles/libneo.dir/build
.PHONY : libneo/fast

#=============================================================================
# Target rules for targets named Catch2WithMain

# Build rule for target.
Catch2WithMain: cmake_check_build_system
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 Catch2WithMain
.PHONY : Catch2WithMain

# fast build rule for target.
Catch2WithMain/fast:
	$(MAKE) $(MAKESILENT) -f third_party/catch2/CMakeFiles/Catch2WithMain.dir/build.make third_party/catch2/CMakeFiles/Catch2WithMain.dir/build
.PHONY : Catch2WithMain/fast

#=============================================================================
# Target rules for targets named spdlog

# Build rule for target.
spdlog: cmake_check_build_system
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 spdlog
.PHONY : spdlog

# fast build rule for target.
spdlog/fast:
	$(MAKE) $(MAKESILENT) -f third_party/spdlog/CMakeFiles/spdlog.dir/build.make third_party/spdlog/CMakeFiles/spdlog.dir/build
.PHONY : spdlog/fast

#=============================================================================
# Target rules for targets named xxhash

# Build rule for target.
xxhash: cmake_check_build_system
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 xxhash
.PHONY : xxhash

# fast build rule for target.
xxhash/fast:
	$(MAKE) $(MAKESILENT) -f third_party/xxhash/CMakeFiles/xxhash.dir/build.make third_party/xxhash/CMakeFiles/xxhash.dir/build
.PHONY : xxhash/fast

model.o: model.c.o

.PHONY : model.o

# target to build an object file
model.c.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/spin_model.dir/build.make CMakeFiles/spin_model.dir/model.c.o
.PHONY : model.c.o

model.i: model.c.i

.PHONY : model.i

# target to preprocess a source file
model.c.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/spin_model.dir/build.make CMakeFiles/spin_model.dir/model.c.i
.PHONY : model.c.i

model.s: model.c.s

.PHONY : model.s

# target to generate assembly for a file
model.c.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/spin_model.dir/build.make CMakeFiles/spin_model.dir/model.c.s
.PHONY : model.c.s

src/api.o: src/api.cpp.o

.PHONY : src/api.o

# target to build an object file
src/api.cpp.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/libneo.dir/build.make CMakeFiles/libneo.dir/src/api.cpp.o
.PHONY : src/api.cpp.o

src/api.i: src/api.cpp.i

.PHONY : src/api.i

# target to preprocess a source file
src/api.cpp.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/libneo.dir/build.make CMakeFiles/libneo.dir/src/api.cpp.i
.PHONY : src/api.cpp.i

src/api.s: src/api.cpp.s

.PHONY : src/api.s

# target to generate assembly for a file
src/api.cpp.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/libneo.dir/build.make CMakeFiles/libneo.dir/src/api.cpp.s
.PHONY : src/api.cpp.s

src/candidates.o: src/candidates.cpp.o

.PHONY : src/candidates.o

# target to build an object file
src/candidates.cpp.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/libneo.dir/build.make CMakeFiles/libneo.dir/src/candidates.cpp.o
.PHONY : src/candidates.cpp.o

src/candidates.i: src/candidates.cpp.i

.PHONY : src/candidates.i

# target to preprocess a source file
src/candidates.cpp.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/libneo.dir/build.make CMakeFiles/libneo.dir/src/candidates.cpp.i
.PHONY : src/candidates.cpp.i

src/candidates.s: src/candidates.cpp.s

.PHONY : src/candidates.s

# target to generate assembly for a file
src/candidates.cpp.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/libneo.dir/build.make CMakeFiles/libneo.dir/src/candidates.cpp.s
.PHONY : src/candidates.cpp.s

src/choices.o: src/choices.cpp.o

.PHONY : src/choices.o

# target to build an object file
src/choices.cpp.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/libneo.dir/build.make CMakeFiles/libneo.dir/src/choices.cpp.o
.PHONY : src/choices.cpp.o

src/choices.i: src/choices.cpp.i

.PHONY : src/choices.i

# target to preprocess a source file
src/choices.cpp.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/libneo.dir/build.make CMakeFiles/libneo.dir/src/choices.cpp.i
.PHONY : src/choices.cpp.i

src/choices.s: src/choices.cpp.s

.PHONY : src/choices.s

# target to generate assembly for a file
src/choices.cpp.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/libneo.dir/build.make CMakeFiles/libneo.dir/src/choices.cpp.s
.PHONY : src/choices.cpp.s

src/comm.o: src/comm.cpp.o

.PHONY : src/comm.o

# target to build an object file
src/comm.cpp.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/libneo.dir/build.make CMakeFiles/libneo.dir/src/comm.cpp.o
.PHONY : src/comm.cpp.o

src/comm.i: src/comm.cpp.i

.PHONY : src/comm.i

# target to preprocess a source file
src/comm.cpp.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/libneo.dir/build.make CMakeFiles/libneo.dir/src/comm.cpp.i
.PHONY : src/comm.cpp.i

src/comm.s: src/comm.cpp.s

.PHONY : src/comm.s

# target to generate assembly for a file
src/comm.cpp.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/libneo.dir/build.make CMakeFiles/libneo.dir/src/comm.cpp.s
.PHONY : src/comm.cpp.s

src/config.o: src/config.cpp.o

.PHONY : src/config.o

# target to build an object file
src/config.cpp.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/libneo.dir/build.make CMakeFiles/libneo.dir/src/config.cpp.o
.PHONY : src/config.cpp.o

src/config.i: src/config.cpp.i

.PHONY : src/config.i

# target to preprocess a source file
src/config.cpp.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/libneo.dir/build.make CMakeFiles/libneo.dir/src/config.cpp.i
.PHONY : src/config.cpp.i

src/config.s: src/config.cpp.s

.PHONY : src/config.s

# target to generate assembly for a file
src/config.cpp.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/libneo.dir/build.make CMakeFiles/libneo.dir/src/config.cpp.s
.PHONY : src/config.cpp.s

src/ecrange.o: src/ecrange.cpp.o

.PHONY : src/ecrange.o

# target to build an object file
src/ecrange.cpp.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/libneo.dir/build.make CMakeFiles/libneo.dir/src/ecrange.cpp.o
.PHONY : src/ecrange.cpp.o

src/ecrange.i: src/ecrange.cpp.i

.PHONY : src/ecrange.i

# target to preprocess a source file
src/ecrange.cpp.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/libneo.dir/build.make CMakeFiles/libneo.dir/src/ecrange.cpp.i
.PHONY : src/ecrange.cpp.i

src/ecrange.s: src/ecrange.cpp.s

.PHONY : src/ecrange.s

# target to generate assembly for a file
src/ecrange.cpp.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/libneo.dir/build.make CMakeFiles/libneo.dir/src/ecrange.cpp.s
.PHONY : src/ecrange.cpp.s

src/emulation.o: src/emulation.cpp.o

.PHONY : src/emulation.o

# target to build an object file
src/emulation.cpp.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/libneo.dir/build.make CMakeFiles/libneo.dir/src/emulation.cpp.o
.PHONY : src/emulation.cpp.o

src/emulation.i: src/emulation.cpp.i

.PHONY : src/emulation.i

# target to preprocess a source file
src/emulation.cpp.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/libneo.dir/build.make CMakeFiles/libneo.dir/src/emulation.cpp.i
.PHONY : src/emulation.cpp.i

src/emulation.s: src/emulation.cpp.s

.PHONY : src/emulation.s

# target to generate assembly for a file
src/emulation.cpp.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/libneo.dir/build.make CMakeFiles/libneo.dir/src/emulation.cpp.s
.PHONY : src/emulation.cpp.s

src/emulationmgr.o: src/emulationmgr.cpp.o

.PHONY : src/emulationmgr.o

# target to build an object file
src/emulationmgr.cpp.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/libneo.dir/build.make CMakeFiles/libneo.dir/src/emulationmgr.cpp.o
.PHONY : src/emulationmgr.cpp.o

src/emulationmgr.i: src/emulationmgr.cpp.i

.PHONY : src/emulationmgr.i

# target to preprocess a source file
src/emulationmgr.cpp.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/libneo.dir/build.make CMakeFiles/libneo.dir/src/emulationmgr.cpp.i
.PHONY : src/emulationmgr.cpp.i

src/emulationmgr.s: src/emulationmgr.cpp.s

.PHONY : src/emulationmgr.s

# target to generate assembly for a file
src/emulationmgr.cpp.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/libneo.dir/build.make CMakeFiles/libneo.dir/src/emulationmgr.cpp.s
.PHONY : src/emulationmgr.cpp.s

src/eqclass.o: src/eqclass.cpp.o

.PHONY : src/eqclass.o

# target to build an object file
src/eqclass.cpp.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/libneo.dir/build.make CMakeFiles/libneo.dir/src/eqclass.cpp.o
.PHONY : src/eqclass.cpp.o

src/eqclass.i: src/eqclass.cpp.i

.PHONY : src/eqclass.i

# target to preprocess a source file
src/eqclass.cpp.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/libneo.dir/build.make CMakeFiles/libneo.dir/src/eqclass.cpp.i
.PHONY : src/eqclass.cpp.i

src/eqclass.s: src/eqclass.cpp.s

.PHONY : src/eqclass.s

# target to generate assembly for a file
src/eqclass.cpp.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/libneo.dir/build.make CMakeFiles/libneo.dir/src/eqclass.cpp.s
.PHONY : src/eqclass.cpp.s

src/eqclasses.o: src/eqclasses.cpp.o

.PHONY : src/eqclasses.o

# target to build an object file
src/eqclasses.cpp.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/libneo.dir/build.make CMakeFiles/libneo.dir/src/eqclasses.cpp.o
.PHONY : src/eqclasses.cpp.o

src/eqclasses.i: src/eqclasses.cpp.i

.PHONY : src/eqclasses.i

# target to preprocess a source file
src/eqclasses.cpp.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/libneo.dir/build.make CMakeFiles/libneo.dir/src/eqclasses.cpp.i
.PHONY : src/eqclasses.cpp.i

src/eqclasses.s: src/eqclasses.cpp.s

.PHONY : src/eqclasses.s

# target to generate assembly for a file
src/eqclasses.cpp.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/libneo.dir/build.make CMakeFiles/libneo.dir/src/eqclasses.cpp.s
.PHONY : src/eqclasses.cpp.s

src/fib.o: src/fib.cpp.o

.PHONY : src/fib.o

# target to build an object file
src/fib.cpp.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/libneo.dir/build.make CMakeFiles/libneo.dir/src/fib.cpp.o
.PHONY : src/fib.cpp.o

src/fib.i: src/fib.cpp.i

.PHONY : src/fib.i

# target to preprocess a source file
src/fib.cpp.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/libneo.dir/build.make CMakeFiles/libneo.dir/src/fib.cpp.i
.PHONY : src/fib.cpp.i

src/fib.s: src/fib.cpp.s

.PHONY : src/fib.s

# target to generate assembly for a file
src/fib.cpp.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/libneo.dir/build.make CMakeFiles/libneo.dir/src/fib.cpp.s
.PHONY : src/fib.cpp.s

src/interface.o: src/interface.cpp.o

.PHONY : src/interface.o

# target to build an object file
src/interface.cpp.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/libneo.dir/build.make CMakeFiles/libneo.dir/src/interface.cpp.o
.PHONY : src/interface.cpp.o

src/interface.i: src/interface.cpp.i

.PHONY : src/interface.i

# target to preprocess a source file
src/interface.cpp.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/libneo.dir/build.make CMakeFiles/libneo.dir/src/interface.cpp.i
.PHONY : src/interface.cpp.i

src/interface.s: src/interface.cpp.s

.PHONY : src/interface.s

# target to generate assembly for a file
src/interface.cpp.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/libneo.dir/build.make CMakeFiles/libneo.dir/src/interface.cpp.s
.PHONY : src/interface.cpp.s

src/l2-lan.o: src/l2-lan.cpp.o

.PHONY : src/l2-lan.o

# target to build an object file
src/l2-lan.cpp.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/libneo.dir/build.make CMakeFiles/libneo.dir/src/l2-lan.cpp.o
.PHONY : src/l2-lan.cpp.o

src/l2-lan.i: src/l2-lan.cpp.i

.PHONY : src/l2-lan.i

# target to preprocess a source file
src/l2-lan.cpp.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/libneo.dir/build.make CMakeFiles/libneo.dir/src/l2-lan.cpp.i
.PHONY : src/l2-lan.cpp.i

src/l2-lan.s: src/l2-lan.cpp.s

.PHONY : src/l2-lan.s

# target to generate assembly for a file
src/l2-lan.cpp.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/libneo.dir/build.make CMakeFiles/libneo.dir/src/l2-lan.cpp.s
.PHONY : src/l2-lan.cpp.s

src/lib/fs.o: src/lib/fs.cpp.o

.PHONY : src/lib/fs.o

# target to build an object file
src/lib/fs.cpp.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/libneo.dir/build.make CMakeFiles/libneo.dir/src/lib/fs.cpp.o
.PHONY : src/lib/fs.cpp.o

src/lib/fs.i: src/lib/fs.cpp.i

.PHONY : src/lib/fs.i

# target to preprocess a source file
src/lib/fs.cpp.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/libneo.dir/build.make CMakeFiles/libneo.dir/src/lib/fs.cpp.i
.PHONY : src/lib/fs.cpp.i

src/lib/fs.s: src/lib/fs.cpp.s

.PHONY : src/lib/fs.s

# target to generate assembly for a file
src/lib/fs.cpp.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/libneo.dir/build.make CMakeFiles/libneo.dir/src/lib/fs.cpp.s
.PHONY : src/lib/fs.cpp.s

src/lib/hash.o: src/lib/hash.cpp.o

.PHONY : src/lib/hash.o

# target to build an object file
src/lib/hash.cpp.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/libneo.dir/build.make CMakeFiles/libneo.dir/src/lib/hash.cpp.o
.PHONY : src/lib/hash.cpp.o

src/lib/hash.i: src/lib/hash.cpp.i

.PHONY : src/lib/hash.i

# target to preprocess a source file
src/lib/hash.cpp.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/libneo.dir/build.make CMakeFiles/libneo.dir/src/lib/hash.cpp.i
.PHONY : src/lib/hash.cpp.i

src/lib/hash.s: src/lib/hash.cpp.s

.PHONY : src/lib/hash.s

# target to generate assembly for a file
src/lib/hash.cpp.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/libneo.dir/build.make CMakeFiles/libneo.dir/src/lib/hash.cpp.s
.PHONY : src/lib/hash.cpp.s

src/lib/ip.o: src/lib/ip.cpp.o

.PHONY : src/lib/ip.o

# target to build an object file
src/lib/ip.cpp.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/libneo.dir/build.make CMakeFiles/libneo.dir/src/lib/ip.cpp.o
.PHONY : src/lib/ip.cpp.o

src/lib/ip.i: src/lib/ip.cpp.i

.PHONY : src/lib/ip.i

# target to preprocess a source file
src/lib/ip.cpp.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/libneo.dir/build.make CMakeFiles/libneo.dir/src/lib/ip.cpp.i
.PHONY : src/lib/ip.cpp.i

src/lib/ip.s: src/lib/ip.cpp.s

.PHONY : src/lib/ip.s

# target to generate assembly for a file
src/lib/ip.cpp.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/libneo.dir/build.make CMakeFiles/libneo.dir/src/lib/ip.cpp.s
.PHONY : src/lib/ip.cpp.s

src/lib/logger.o: src/lib/logger.cpp.o

.PHONY : src/lib/logger.o

# target to build an object file
src/lib/logger.cpp.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/libneo.dir/build.make CMakeFiles/libneo.dir/src/lib/logger.cpp.o
.PHONY : src/lib/logger.cpp.o

src/lib/logger.i: src/lib/logger.cpp.i

.PHONY : src/lib/logger.i

# target to preprocess a source file
src/lib/logger.cpp.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/libneo.dir/build.make CMakeFiles/libneo.dir/src/lib/logger.cpp.i
.PHONY : src/lib/logger.cpp.i

src/lib/logger.s: src/lib/logger.cpp.s

.PHONY : src/lib/logger.s

# target to generate assembly for a file
src/lib/logger.cpp.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/libneo.dir/build.make CMakeFiles/libneo.dir/src/lib/logger.cpp.s
.PHONY : src/lib/logger.cpp.s

src/lib/net.o: src/lib/net.cpp.o

.PHONY : src/lib/net.o

# target to build an object file
src/lib/net.cpp.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/libneo.dir/build.make CMakeFiles/libneo.dir/src/lib/net.cpp.o
.PHONY : src/lib/net.cpp.o

src/lib/net.i: src/lib/net.cpp.i

.PHONY : src/lib/net.i

# target to preprocess a source file
src/lib/net.cpp.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/libneo.dir/build.make CMakeFiles/libneo.dir/src/lib/net.cpp.i
.PHONY : src/lib/net.cpp.i

src/lib/net.s: src/lib/net.cpp.s

.PHONY : src/lib/net.s

# target to generate assembly for a file
src/lib/net.cpp.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/libneo.dir/build.make CMakeFiles/libneo.dir/src/lib/net.cpp.s
.PHONY : src/lib/net.cpp.s

src/link.o: src/link.cpp.o

.PHONY : src/link.o

# target to build an object file
src/link.cpp.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/libneo.dir/build.make CMakeFiles/libneo.dir/src/link.cpp.o
.PHONY : src/link.cpp.o

src/link.i: src/link.cpp.i

.PHONY : src/link.i

# target to preprocess a source file
src/link.cpp.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/libneo.dir/build.make CMakeFiles/libneo.dir/src/link.cpp.i
.PHONY : src/link.cpp.i

src/link.s: src/link.cpp.s

.PHONY : src/link.s

# target to generate assembly for a file
src/link.cpp.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/libneo.dir/build.make CMakeFiles/libneo.dir/src/link.cpp.s
.PHONY : src/link.cpp.s

src/main.o: src/main.cpp.o

.PHONY : src/main.o

# target to build an object file
src/main.cpp.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/neo.dir/build.make CMakeFiles/neo.dir/src/main.cpp.o
.PHONY : src/main.cpp.o

src/main.i: src/main.cpp.i

.PHONY : src/main.i

# target to preprocess a source file
src/main.cpp.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/neo.dir/build.make CMakeFiles/neo.dir/src/main.cpp.i
.PHONY : src/main.cpp.i

src/main.s: src/main.cpp.s

.PHONY : src/main.s

# target to generate assembly for a file
src/main.cpp.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/neo.dir/build.make CMakeFiles/neo.dir/src/main.cpp.s
.PHONY : src/main.cpp.s

src/mb-app/ipvs.o: src/mb-app/ipvs.cpp.o

.PHONY : src/mb-app/ipvs.o

# target to build an object file
src/mb-app/ipvs.cpp.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/libneo.dir/build.make CMakeFiles/libneo.dir/src/mb-app/ipvs.cpp.o
.PHONY : src/mb-app/ipvs.cpp.o

src/mb-app/ipvs.i: src/mb-app/ipvs.cpp.i

.PHONY : src/mb-app/ipvs.i

# target to preprocess a source file
src/mb-app/ipvs.cpp.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/libneo.dir/build.make CMakeFiles/libneo.dir/src/mb-app/ipvs.cpp.i
.PHONY : src/mb-app/ipvs.cpp.i

src/mb-app/ipvs.s: src/mb-app/ipvs.cpp.s

.PHONY : src/mb-app/ipvs.s

# target to generate assembly for a file
src/mb-app/ipvs.cpp.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/libneo.dir/build.make CMakeFiles/libneo.dir/src/mb-app/ipvs.cpp.s
.PHONY : src/mb-app/ipvs.cpp.s

src/mb-app/mb-app.o: src/mb-app/mb-app.cpp.o

.PHONY : src/mb-app/mb-app.o

# target to build an object file
src/mb-app/mb-app.cpp.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/libneo.dir/build.make CMakeFiles/libneo.dir/src/mb-app/mb-app.cpp.o
.PHONY : src/mb-app/mb-app.cpp.o

src/mb-app/mb-app.i: src/mb-app/mb-app.cpp.i

.PHONY : src/mb-app/mb-app.i

# target to preprocess a source file
src/mb-app/mb-app.cpp.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/libneo.dir/build.make CMakeFiles/libneo.dir/src/mb-app/mb-app.cpp.i
.PHONY : src/mb-app/mb-app.cpp.i

src/mb-app/mb-app.s: src/mb-app/mb-app.cpp.s

.PHONY : src/mb-app/mb-app.s

# target to generate assembly for a file
src/mb-app/mb-app.cpp.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/libneo.dir/build.make CMakeFiles/libneo.dir/src/mb-app/mb-app.cpp.s
.PHONY : src/mb-app/mb-app.cpp.s

src/mb-app/netfilter.o: src/mb-app/netfilter.cpp.o

.PHONY : src/mb-app/netfilter.o

# target to build an object file
src/mb-app/netfilter.cpp.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/libneo.dir/build.make CMakeFiles/libneo.dir/src/mb-app/netfilter.cpp.o
.PHONY : src/mb-app/netfilter.cpp.o

src/mb-app/netfilter.i: src/mb-app/netfilter.cpp.i

.PHONY : src/mb-app/netfilter.i

# target to preprocess a source file
src/mb-app/netfilter.cpp.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/libneo.dir/build.make CMakeFiles/libneo.dir/src/mb-app/netfilter.cpp.i
.PHONY : src/mb-app/netfilter.cpp.i

src/mb-app/netfilter.s: src/mb-app/netfilter.cpp.s

.PHONY : src/mb-app/netfilter.s

# target to generate assembly for a file
src/mb-app/netfilter.cpp.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/libneo.dir/build.make CMakeFiles/libneo.dir/src/mb-app/netfilter.cpp.s
.PHONY : src/mb-app/netfilter.cpp.s

src/mb-app/squid.o: src/mb-app/squid.cpp.o

.PHONY : src/mb-app/squid.o

# target to build an object file
src/mb-app/squid.cpp.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/libneo.dir/build.make CMakeFiles/libneo.dir/src/mb-app/squid.cpp.o
.PHONY : src/mb-app/squid.cpp.o

src/mb-app/squid.i: src/mb-app/squid.cpp.i

.PHONY : src/mb-app/squid.i

# target to preprocess a source file
src/mb-app/squid.cpp.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/libneo.dir/build.make CMakeFiles/libneo.dir/src/mb-app/squid.cpp.i
.PHONY : src/mb-app/squid.cpp.i

src/mb-app/squid.s: src/mb-app/squid.cpp.s

.PHONY : src/mb-app/squid.s

# target to generate assembly for a file
src/mb-app/squid.cpp.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/libneo.dir/build.make CMakeFiles/libneo.dir/src/mb-app/squid.cpp.s
.PHONY : src/mb-app/squid.cpp.s

src/mb-env/netns.o: src/mb-env/netns.cpp.o

.PHONY : src/mb-env/netns.o

# target to build an object file
src/mb-env/netns.cpp.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/libneo.dir/build.make CMakeFiles/libneo.dir/src/mb-env/netns.cpp.o
.PHONY : src/mb-env/netns.cpp.o

src/mb-env/netns.i: src/mb-env/netns.cpp.i

.PHONY : src/mb-env/netns.i

# target to preprocess a source file
src/mb-env/netns.cpp.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/libneo.dir/build.make CMakeFiles/libneo.dir/src/mb-env/netns.cpp.i
.PHONY : src/mb-env/netns.cpp.i

src/mb-env/netns.s: src/mb-env/netns.cpp.s

.PHONY : src/mb-env/netns.s

# target to generate assembly for a file
src/mb-env/netns.cpp.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/libneo.dir/build.make CMakeFiles/libneo.dir/src/mb-env/netns.cpp.s
.PHONY : src/mb-env/netns.cpp.s

src/middlebox.o: src/middlebox.cpp.o

.PHONY : src/middlebox.o

# target to build an object file
src/middlebox.cpp.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/libneo.dir/build.make CMakeFiles/libneo.dir/src/middlebox.cpp.o
.PHONY : src/middlebox.cpp.o

src/middlebox.i: src/middlebox.cpp.i

.PHONY : src/middlebox.i

# target to preprocess a source file
src/middlebox.cpp.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/libneo.dir/build.make CMakeFiles/libneo.dir/src/middlebox.cpp.i
.PHONY : src/middlebox.cpp.i

src/middlebox.s: src/middlebox.cpp.s

.PHONY : src/middlebox.s

# target to generate assembly for a file
src/middlebox.cpp.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/libneo.dir/build.make CMakeFiles/libneo.dir/src/middlebox.cpp.s
.PHONY : src/middlebox.cpp.s

src/model-access.o: src/model-access.cpp.o

.PHONY : src/model-access.o

# target to build an object file
src/model-access.cpp.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/libneo.dir/build.make CMakeFiles/libneo.dir/src/model-access.cpp.o
.PHONY : src/model-access.cpp.o

src/model-access.i: src/model-access.cpp.i

.PHONY : src/model-access.i

# target to preprocess a source file
src/model-access.cpp.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/libneo.dir/build.make CMakeFiles/libneo.dir/src/model-access.cpp.i
.PHONY : src/model-access.cpp.i

src/model-access.s: src/model-access.cpp.s

.PHONY : src/model-access.s

# target to generate assembly for a file
src/model-access.cpp.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/libneo.dir/build.make CMakeFiles/libneo.dir/src/model-access.cpp.s
.PHONY : src/model-access.cpp.s

src/network.o: src/network.cpp.o

.PHONY : src/network.o

# target to build an object file
src/network.cpp.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/libneo.dir/build.make CMakeFiles/libneo.dir/src/network.cpp.o
.PHONY : src/network.cpp.o

src/network.i: src/network.cpp.i

.PHONY : src/network.i

# target to preprocess a source file
src/network.cpp.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/libneo.dir/build.make CMakeFiles/libneo.dir/src/network.cpp.i
.PHONY : src/network.cpp.i

src/network.s: src/network.cpp.s

.PHONY : src/network.s

# target to generate assembly for a file
src/network.cpp.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/libneo.dir/build.make CMakeFiles/libneo.dir/src/network.cpp.s
.PHONY : src/network.cpp.s

src/node.o: src/node.cpp.o

.PHONY : src/node.o

# target to build an object file
src/node.cpp.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/libneo.dir/build.make CMakeFiles/libneo.dir/src/node.cpp.o
.PHONY : src/node.cpp.o

src/node.i: src/node.cpp.i

.PHONY : src/node.i

# target to preprocess a source file
src/node.cpp.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/libneo.dir/build.make CMakeFiles/libneo.dir/src/node.cpp.i
.PHONY : src/node.cpp.i

src/node.s: src/node.cpp.s

.PHONY : src/node.s

# target to generate assembly for a file
src/node.cpp.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/libneo.dir/build.make CMakeFiles/libneo.dir/src/node.cpp.s
.PHONY : src/node.cpp.s

src/packet.o: src/packet.cpp.o

.PHONY : src/packet.o

# target to build an object file
src/packet.cpp.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/libneo.dir/build.make CMakeFiles/libneo.dir/src/packet.cpp.o
.PHONY : src/packet.cpp.o

src/packet.i: src/packet.cpp.i

.PHONY : src/packet.i

# target to preprocess a source file
src/packet.cpp.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/libneo.dir/build.make CMakeFiles/libneo.dir/src/packet.cpp.i
.PHONY : src/packet.cpp.i

src/packet.s: src/packet.cpp.s

.PHONY : src/packet.s

# target to generate assembly for a file
src/packet.cpp.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/libneo.dir/build.make CMakeFiles/libneo.dir/src/packet.cpp.s
.PHONY : src/packet.cpp.s

src/payload.o: src/payload.cpp.o

.PHONY : src/payload.o

# target to build an object file
src/payload.cpp.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/libneo.dir/build.make CMakeFiles/libneo.dir/src/payload.cpp.o
.PHONY : src/payload.cpp.o

src/payload.i: src/payload.cpp.i

.PHONY : src/payload.i

# target to preprocess a source file
src/payload.cpp.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/libneo.dir/build.make CMakeFiles/libneo.dir/src/payload.cpp.i
.PHONY : src/payload.cpp.i

src/payload.s: src/payload.cpp.s

.PHONY : src/payload.s

# target to generate assembly for a file
src/payload.cpp.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/libneo.dir/build.make CMakeFiles/libneo.dir/src/payload.cpp.s
.PHONY : src/payload.cpp.s

src/pkt-hist.o: src/pkt-hist.cpp.o

.PHONY : src/pkt-hist.o

# target to build an object file
src/pkt-hist.cpp.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/libneo.dir/build.make CMakeFiles/libneo.dir/src/pkt-hist.cpp.o
.PHONY : src/pkt-hist.cpp.o

src/pkt-hist.i: src/pkt-hist.cpp.i

.PHONY : src/pkt-hist.i

# target to preprocess a source file
src/pkt-hist.cpp.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/libneo.dir/build.make CMakeFiles/libneo.dir/src/pkt-hist.cpp.i
.PHONY : src/pkt-hist.cpp.i

src/pkt-hist.s: src/pkt-hist.cpp.s

.PHONY : src/pkt-hist.s

# target to generate assembly for a file
src/pkt-hist.cpp.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/libneo.dir/build.make CMakeFiles/libneo.dir/src/pkt-hist.cpp.s
.PHONY : src/pkt-hist.cpp.s

src/pktbuffer.o: src/pktbuffer.cpp.o

.PHONY : src/pktbuffer.o

# target to build an object file
src/pktbuffer.cpp.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/libneo.dir/build.make CMakeFiles/libneo.dir/src/pktbuffer.cpp.o
.PHONY : src/pktbuffer.cpp.o

src/pktbuffer.i: src/pktbuffer.cpp.i

.PHONY : src/pktbuffer.i

# target to preprocess a source file
src/pktbuffer.cpp.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/libneo.dir/build.make CMakeFiles/libneo.dir/src/pktbuffer.cpp.i
.PHONY : src/pktbuffer.cpp.i

src/pktbuffer.s: src/pktbuffer.cpp.s

.PHONY : src/pktbuffer.s

# target to generate assembly for a file
src/pktbuffer.cpp.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/libneo.dir/build.make CMakeFiles/libneo.dir/src/pktbuffer.cpp.s
.PHONY : src/pktbuffer.cpp.s

src/plankton.o: src/plankton.cpp.o

.PHONY : src/plankton.o

# target to build an object file
src/plankton.cpp.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/libneo.dir/build.make CMakeFiles/libneo.dir/src/plankton.cpp.o
.PHONY : src/plankton.cpp.o

src/plankton.i: src/plankton.cpp.i

.PHONY : src/plankton.i

# target to preprocess a source file
src/plankton.cpp.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/libneo.dir/build.make CMakeFiles/libneo.dir/src/plankton.cpp.i
.PHONY : src/plankton.cpp.i

src/plankton.s: src/plankton.cpp.s

.PHONY : src/plankton.s

# target to generate assembly for a file
src/plankton.cpp.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/libneo.dir/build.make CMakeFiles/libneo.dir/src/plankton.cpp.s
.PHONY : src/plankton.cpp.s

src/policy/conditional.o: src/policy/conditional.cpp.o

.PHONY : src/policy/conditional.o

# target to build an object file
src/policy/conditional.cpp.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/libneo.dir/build.make CMakeFiles/libneo.dir/src/policy/conditional.cpp.o
.PHONY : src/policy/conditional.cpp.o

src/policy/conditional.i: src/policy/conditional.cpp.i

.PHONY : src/policy/conditional.i

# target to preprocess a source file
src/policy/conditional.cpp.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/libneo.dir/build.make CMakeFiles/libneo.dir/src/policy/conditional.cpp.i
.PHONY : src/policy/conditional.cpp.i

src/policy/conditional.s: src/policy/conditional.cpp.s

.PHONY : src/policy/conditional.s

# target to generate assembly for a file
src/policy/conditional.cpp.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/libneo.dir/build.make CMakeFiles/libneo.dir/src/policy/conditional.cpp.s
.PHONY : src/policy/conditional.cpp.s

src/policy/consistency.o: src/policy/consistency.cpp.o

.PHONY : src/policy/consistency.o

# target to build an object file
src/policy/consistency.cpp.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/libneo.dir/build.make CMakeFiles/libneo.dir/src/policy/consistency.cpp.o
.PHONY : src/policy/consistency.cpp.o

src/policy/consistency.i: src/policy/consistency.cpp.i

.PHONY : src/policy/consistency.i

# target to preprocess a source file
src/policy/consistency.cpp.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/libneo.dir/build.make CMakeFiles/libneo.dir/src/policy/consistency.cpp.i
.PHONY : src/policy/consistency.cpp.i

src/policy/consistency.s: src/policy/consistency.cpp.s

.PHONY : src/policy/consistency.s

# target to generate assembly for a file
src/policy/consistency.cpp.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/libneo.dir/build.make CMakeFiles/libneo.dir/src/policy/consistency.cpp.s
.PHONY : src/policy/consistency.cpp.s

src/policy/loadbalance.o: src/policy/loadbalance.cpp.o

.PHONY : src/policy/loadbalance.o

# target to build an object file
src/policy/loadbalance.cpp.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/libneo.dir/build.make CMakeFiles/libneo.dir/src/policy/loadbalance.cpp.o
.PHONY : src/policy/loadbalance.cpp.o

src/policy/loadbalance.i: src/policy/loadbalance.cpp.i

.PHONY : src/policy/loadbalance.i

# target to preprocess a source file
src/policy/loadbalance.cpp.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/libneo.dir/build.make CMakeFiles/libneo.dir/src/policy/loadbalance.cpp.i
.PHONY : src/policy/loadbalance.cpp.i

src/policy/loadbalance.s: src/policy/loadbalance.cpp.s

.PHONY : src/policy/loadbalance.s

# target to generate assembly for a file
src/policy/loadbalance.cpp.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/libneo.dir/build.make CMakeFiles/libneo.dir/src/policy/loadbalance.cpp.s
.PHONY : src/policy/loadbalance.cpp.s

src/policy/one-request.o: src/policy/one-request.cpp.o

.PHONY : src/policy/one-request.o

# target to build an object file
src/policy/one-request.cpp.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/libneo.dir/build.make CMakeFiles/libneo.dir/src/policy/one-request.cpp.o
.PHONY : src/policy/one-request.cpp.o

src/policy/one-request.i: src/policy/one-request.cpp.i

.PHONY : src/policy/one-request.i

# target to preprocess a source file
src/policy/one-request.cpp.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/libneo.dir/build.make CMakeFiles/libneo.dir/src/policy/one-request.cpp.i
.PHONY : src/policy/one-request.cpp.i

src/policy/one-request.s: src/policy/one-request.cpp.s

.PHONY : src/policy/one-request.s

# target to generate assembly for a file
src/policy/one-request.cpp.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/libneo.dir/build.make CMakeFiles/libneo.dir/src/policy/one-request.cpp.s
.PHONY : src/policy/one-request.cpp.s

src/policy/policy.o: src/policy/policy.cpp.o

.PHONY : src/policy/policy.o

# target to build an object file
src/policy/policy.cpp.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/libneo.dir/build.make CMakeFiles/libneo.dir/src/policy/policy.cpp.o
.PHONY : src/policy/policy.cpp.o

src/policy/policy.i: src/policy/policy.cpp.i

.PHONY : src/policy/policy.i

# target to preprocess a source file
src/policy/policy.cpp.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/libneo.dir/build.make CMakeFiles/libneo.dir/src/policy/policy.cpp.i
.PHONY : src/policy/policy.cpp.i

src/policy/policy.s: src/policy/policy.cpp.s

.PHONY : src/policy/policy.s

# target to generate assembly for a file
src/policy/policy.cpp.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/libneo.dir/build.make CMakeFiles/libneo.dir/src/policy/policy.cpp.s
.PHONY : src/policy/policy.cpp.s

src/policy/reachability.o: src/policy/reachability.cpp.o

.PHONY : src/policy/reachability.o

# target to build an object file
src/policy/reachability.cpp.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/libneo.dir/build.make CMakeFiles/libneo.dir/src/policy/reachability.cpp.o
.PHONY : src/policy/reachability.cpp.o

src/policy/reachability.i: src/policy/reachability.cpp.i

.PHONY : src/policy/reachability.i

# target to preprocess a source file
src/policy/reachability.cpp.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/libneo.dir/build.make CMakeFiles/libneo.dir/src/policy/reachability.cpp.i
.PHONY : src/policy/reachability.cpp.i

src/policy/reachability.s: src/policy/reachability.cpp.s

.PHONY : src/policy/reachability.s

# target to generate assembly for a file
src/policy/reachability.cpp.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/libneo.dir/build.make CMakeFiles/libneo.dir/src/policy/reachability.cpp.s
.PHONY : src/policy/reachability.cpp.s

src/policy/reply-reachability.o: src/policy/reply-reachability.cpp.o

.PHONY : src/policy/reply-reachability.o

# target to build an object file
src/policy/reply-reachability.cpp.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/libneo.dir/build.make CMakeFiles/libneo.dir/src/policy/reply-reachability.cpp.o
.PHONY : src/policy/reply-reachability.cpp.o

src/policy/reply-reachability.i: src/policy/reply-reachability.cpp.i

.PHONY : src/policy/reply-reachability.i

# target to preprocess a source file
src/policy/reply-reachability.cpp.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/libneo.dir/build.make CMakeFiles/libneo.dir/src/policy/reply-reachability.cpp.i
.PHONY : src/policy/reply-reachability.cpp.i

src/policy/reply-reachability.s: src/policy/reply-reachability.cpp.s

.PHONY : src/policy/reply-reachability.s

# target to generate assembly for a file
src/policy/reply-reachability.cpp.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/libneo.dir/build.make CMakeFiles/libneo.dir/src/policy/reply-reachability.cpp.s
.PHONY : src/policy/reply-reachability.cpp.s

src/policy/waypoint.o: src/policy/waypoint.cpp.o

.PHONY : src/policy/waypoint.o

# target to build an object file
src/policy/waypoint.cpp.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/libneo.dir/build.make CMakeFiles/libneo.dir/src/policy/waypoint.cpp.o
.PHONY : src/policy/waypoint.cpp.o

src/policy/waypoint.i: src/policy/waypoint.cpp.i

.PHONY : src/policy/waypoint.i

# target to preprocess a source file
src/policy/waypoint.cpp.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/libneo.dir/build.make CMakeFiles/libneo.dir/src/policy/waypoint.cpp.i
.PHONY : src/policy/waypoint.cpp.i

src/policy/waypoint.s: src/policy/waypoint.cpp.s

.PHONY : src/policy/waypoint.s

# target to generate assembly for a file
src/policy/waypoint.cpp.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/libneo.dir/build.make CMakeFiles/libneo.dir/src/policy/waypoint.cpp.s
.PHONY : src/policy/waypoint.cpp.s

src/process/forwarding.o: src/process/forwarding.cpp.o

.PHONY : src/process/forwarding.o

# target to build an object file
src/process/forwarding.cpp.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/libneo.dir/build.make CMakeFiles/libneo.dir/src/process/forwarding.cpp.o
.PHONY : src/process/forwarding.cpp.o

src/process/forwarding.i: src/process/forwarding.cpp.i

.PHONY : src/process/forwarding.i

# target to preprocess a source file
src/process/forwarding.cpp.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/libneo.dir/build.make CMakeFiles/libneo.dir/src/process/forwarding.cpp.i
.PHONY : src/process/forwarding.cpp.i

src/process/forwarding.s: src/process/forwarding.cpp.s

.PHONY : src/process/forwarding.s

# target to generate assembly for a file
src/process/forwarding.cpp.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/libneo.dir/build.make CMakeFiles/libneo.dir/src/process/forwarding.cpp.s
.PHONY : src/process/forwarding.cpp.s

src/process/openflow.o: src/process/openflow.cpp.o

.PHONY : src/process/openflow.o

# target to build an object file
src/process/openflow.cpp.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/libneo.dir/build.make CMakeFiles/libneo.dir/src/process/openflow.cpp.o
.PHONY : src/process/openflow.cpp.o

src/process/openflow.i: src/process/openflow.cpp.i

.PHONY : src/process/openflow.i

# target to preprocess a source file
src/process/openflow.cpp.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/libneo.dir/build.make CMakeFiles/libneo.dir/src/process/openflow.cpp.i
.PHONY : src/process/openflow.cpp.i

src/process/openflow.s: src/process/openflow.cpp.s

.PHONY : src/process/openflow.s

# target to generate assembly for a file
src/process/openflow.cpp.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/libneo.dir/build.make CMakeFiles/libneo.dir/src/process/openflow.cpp.s
.PHONY : src/process/openflow.cpp.s

src/process/process.o: src/process/process.cpp.o

.PHONY : src/process/process.o

# target to build an object file
src/process/process.cpp.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/libneo.dir/build.make CMakeFiles/libneo.dir/src/process/process.cpp.o
.PHONY : src/process/process.cpp.o

src/process/process.i: src/process/process.cpp.i

.PHONY : src/process/process.i

# target to preprocess a source file
src/process/process.cpp.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/libneo.dir/build.make CMakeFiles/libneo.dir/src/process/process.cpp.i
.PHONY : src/process/process.cpp.i

src/process/process.s: src/process/process.cpp.s

.PHONY : src/process/process.s

# target to generate assembly for a file
src/process/process.cpp.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/libneo.dir/build.make CMakeFiles/libneo.dir/src/process/process.cpp.s
.PHONY : src/process/process.cpp.s

src/route.o: src/route.cpp.o

.PHONY : src/route.o

# target to build an object file
src/route.cpp.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/libneo.dir/build.make CMakeFiles/libneo.dir/src/route.cpp.o
.PHONY : src/route.cpp.o

src/route.i: src/route.cpp.i

.PHONY : src/route.i

# target to preprocess a source file
src/route.cpp.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/libneo.dir/build.make CMakeFiles/libneo.dir/src/route.cpp.i
.PHONY : src/route.cpp.i

src/route.s: src/route.cpp.s

.PHONY : src/route.s

# target to generate assembly for a file
src/route.cpp.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/libneo.dir/build.make CMakeFiles/libneo.dir/src/route.cpp.s
.PHONY : src/route.cpp.s

src/routingtable.o: src/routingtable.cpp.o

.PHONY : src/routingtable.o

# target to build an object file
src/routingtable.cpp.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/libneo.dir/build.make CMakeFiles/libneo.dir/src/routingtable.cpp.o
.PHONY : src/routingtable.cpp.o

src/routingtable.i: src/routingtable.cpp.i

.PHONY : src/routingtable.i

# target to preprocess a source file
src/routingtable.cpp.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/libneo.dir/build.make CMakeFiles/libneo.dir/src/routingtable.cpp.i
.PHONY : src/routingtable.cpp.i

src/routingtable.s: src/routingtable.cpp.s

.PHONY : src/routingtable.s

# target to generate assembly for a file
src/routingtable.cpp.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/libneo.dir/build.make CMakeFiles/libneo.dir/src/routingtable.cpp.s
.PHONY : src/routingtable.cpp.s

src/stats.o: src/stats.cpp.o

.PHONY : src/stats.o

# target to build an object file
src/stats.cpp.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/libneo.dir/build.make CMakeFiles/libneo.dir/src/stats.cpp.o
.PHONY : src/stats.cpp.o

src/stats.i: src/stats.cpp.i

.PHONY : src/stats.i

# target to preprocess a source file
src/stats.cpp.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/libneo.dir/build.make CMakeFiles/libneo.dir/src/stats.cpp.i
.PHONY : src/stats.cpp.i

src/stats.s: src/stats.cpp.s

.PHONY : src/stats.s

# target to generate assembly for a file
src/stats.cpp.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/libneo.dir/build.make CMakeFiles/libneo.dir/src/stats.cpp.s
.PHONY : src/stats.cpp.s

# Help Target
help:
	@echo "The following are some of the valid targets for this Makefile:"
	@echo "... all (the default if no target is provided)"
	@echo "... clean"
	@echo "... depend"
	@echo "... edit_cache"
	@echo "... install"
	@echo "... install/local"
	@echo "... install/strip"
	@echo "... list_install_components"
	@echo "... rebuild_cache"
	@echo "... setcap"
	@echo "... spdlog"
	@echo "... Catch2WithMain"
	@echo "... libneo"
	@echo "... neo"
	@echo "... spin_model"
	@echo "... xxhash"
	@echo "... model.o"
	@echo "... model.i"
	@echo "... model.s"
	@echo "... src/api.o"
	@echo "... src/api.i"
	@echo "... src/api.s"
	@echo "... src/candidates.o"
	@echo "... src/candidates.i"
	@echo "... src/candidates.s"
	@echo "... src/choices.o"
	@echo "... src/choices.i"
	@echo "... src/choices.s"
	@echo "... src/comm.o"
	@echo "... src/comm.i"
	@echo "... src/comm.s"
	@echo "... src/config.o"
	@echo "... src/config.i"
	@echo "... src/config.s"
	@echo "... src/ecrange.o"
	@echo "... src/ecrange.i"
	@echo "... src/ecrange.s"
	@echo "... src/emulation.o"
	@echo "... src/emulation.i"
	@echo "... src/emulation.s"
	@echo "... src/emulationmgr.o"
	@echo "... src/emulationmgr.i"
	@echo "... src/emulationmgr.s"
	@echo "... src/eqclass.o"
	@echo "... src/eqclass.i"
	@echo "... src/eqclass.s"
	@echo "... src/eqclasses.o"
	@echo "... src/eqclasses.i"
	@echo "... src/eqclasses.s"
	@echo "... src/fib.o"
	@echo "... src/fib.i"
	@echo "... src/fib.s"
	@echo "... src/interface.o"
	@echo "... src/interface.i"
	@echo "... src/interface.s"
	@echo "... src/l2-lan.o"
	@echo "... src/l2-lan.i"
	@echo "... src/l2-lan.s"
	@echo "... src/lib/fs.o"
	@echo "... src/lib/fs.i"
	@echo "... src/lib/fs.s"
	@echo "... src/lib/hash.o"
	@echo "... src/lib/hash.i"
	@echo "... src/lib/hash.s"
	@echo "... src/lib/ip.o"
	@echo "... src/lib/ip.i"
	@echo "... src/lib/ip.s"
	@echo "... src/lib/logger.o"
	@echo "... src/lib/logger.i"
	@echo "... src/lib/logger.s"
	@echo "... src/lib/net.o"
	@echo "... src/lib/net.i"
	@echo "... src/lib/net.s"
	@echo "... src/link.o"
	@echo "... src/link.i"
	@echo "... src/link.s"
	@echo "... src/main.o"
	@echo "... src/main.i"
	@echo "... src/main.s"
	@echo "... src/mb-app/ipvs.o"
	@echo "... src/mb-app/ipvs.i"
	@echo "... src/mb-app/ipvs.s"
	@echo "... src/mb-app/mb-app.o"
	@echo "... src/mb-app/mb-app.i"
	@echo "... src/mb-app/mb-app.s"
	@echo "... src/mb-app/netfilter.o"
	@echo "... src/mb-app/netfilter.i"
	@echo "... src/mb-app/netfilter.s"
	@echo "... src/mb-app/squid.o"
	@echo "... src/mb-app/squid.i"
	@echo "... src/mb-app/squid.s"
	@echo "... src/mb-env/netns.o"
	@echo "... src/mb-env/netns.i"
	@echo "... src/mb-env/netns.s"
	@echo "... src/middlebox.o"
	@echo "... src/middlebox.i"
	@echo "... src/middlebox.s"
	@echo "... src/model-access.o"
	@echo "... src/model-access.i"
	@echo "... src/model-access.s"
	@echo "... src/network.o"
	@echo "... src/network.i"
	@echo "... src/network.s"
	@echo "... src/node.o"
	@echo "... src/node.i"
	@echo "... src/node.s"
	@echo "... src/packet.o"
	@echo "... src/packet.i"
	@echo "... src/packet.s"
	@echo "... src/payload.o"
	@echo "... src/payload.i"
	@echo "... src/payload.s"
	@echo "... src/pkt-hist.o"
	@echo "... src/pkt-hist.i"
	@echo "... src/pkt-hist.s"
	@echo "... src/pktbuffer.o"
	@echo "... src/pktbuffer.i"
	@echo "... src/pktbuffer.s"
	@echo "... src/plankton.o"
	@echo "... src/plankton.i"
	@echo "... src/plankton.s"
	@echo "... src/policy/conditional.o"
	@echo "... src/policy/conditional.i"
	@echo "... src/policy/conditional.s"
	@echo "... src/policy/consistency.o"
	@echo "... src/policy/consistency.i"
	@echo "... src/policy/consistency.s"
	@echo "... src/policy/loadbalance.o"
	@echo "... src/policy/loadbalance.i"
	@echo "... src/policy/loadbalance.s"
	@echo "... src/policy/one-request.o"
	@echo "... src/policy/one-request.i"
	@echo "... src/policy/one-request.s"
	@echo "... src/policy/policy.o"
	@echo "... src/policy/policy.i"
	@echo "... src/policy/policy.s"
	@echo "... src/policy/reachability.o"
	@echo "... src/policy/reachability.i"
	@echo "... src/policy/reachability.s"
	@echo "... src/policy/reply-reachability.o"
	@echo "... src/policy/reply-reachability.i"
	@echo "... src/policy/reply-reachability.s"
	@echo "... src/policy/waypoint.o"
	@echo "... src/policy/waypoint.i"
	@echo "... src/policy/waypoint.s"
	@echo "... src/process/forwarding.o"
	@echo "... src/process/forwarding.i"
	@echo "... src/process/forwarding.s"
	@echo "... src/process/openflow.o"
	@echo "... src/process/openflow.i"
	@echo "... src/process/openflow.s"
	@echo "... src/process/process.o"
	@echo "... src/process/process.i"
	@echo "... src/process/process.s"
	@echo "... src/route.o"
	@echo "... src/route.i"
	@echo "... src/route.s"
	@echo "... src/routingtable.o"
	@echo "... src/routingtable.i"
	@echo "... src/routingtable.s"
	@echo "... src/stats.o"
	@echo "... src/stats.i"
	@echo "... src/stats.s"
.PHONY : help



#=============================================================================
# Special targets to cleanup operation of make.

# Special rule to run CMake to check the build system integrity.
# No rule that depends on this can have commands that come from listfiles
# because they might be regenerated.
cmake_check_build_system:
	$(CMAKE_COMMAND) -P /root/neo-kaiyu/build/CMakeFiles/VerifyGlobs.cmake
	$(CMAKE_COMMAND) -S$(CMAKE_SOURCE_DIR) -B$(CMAKE_BINARY_DIR) --check-build-system CMakeFiles/Makefile.cmake 0
.PHONY : cmake_check_build_system

